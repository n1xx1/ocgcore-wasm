{
  "name": "ocgcore-wasm",
  "version": "0.0.1",
  "type": "module",
  "author": {
    "name": "n1xx1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/n1xx1/ocgcore-wasm.git"
  },
  "types": "dist/index.d.ts",
  "main": "dist/index.js",
  "module": "dist/index.js",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js",
      "default": "./dist/index.js"
    },
    "./package.json": "./package.json"
  },
  "files": [
    "dist/*",
    "lib/*",
    "src"
  ],
  "browser": {
    "path": false,
    "child_process": false,
    "fs": false,
    "perf_hooks": false
  },
  "license": "MIT",
  "scripts": {
    "build:emscripten": "cross-env-shell docker run --rm -v $INIT_CWD:/src emscripten/emsdk ./build.sh",
    "build:lib": "esbuild ./src/index.ts --analyze --bundle --external:../lib/ocgcore.mjs --external:path --external:fs --external:child_process --external:perf_hooks --format=esm --target=es2020 --minify --sourcemap --outfile=dist/index.js",
    "build:test": "esbuild ./tests/test.ts --analyze --bundle --platform=node --format=esm --target=es2020 --minify --sourcemap --outfile=tests/dist/test.js",
    "build:types": "tsc --project tsconfig.types.json && api-extractor run",
    "build": "npm run build:emscripten && npm run build:lib && npm run build:types"
  },
  "devDependencies": {
    "@microsoft/api-extractor": "^7.35.2",
    "@types/emscripten": "^1.39.6",
    "@types/node": "^20.3.0",
    "cross-env": "^7.0.3",
    "esbuild": "^0.18.0",
    "esno": "^0.16.3",
    "typescript": "^5.1.3"
  }
}
