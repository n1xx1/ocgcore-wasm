name: "Build"
on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: "true"

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.1.0
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Get subrepo revisions
        shell: bash
        run: |
          echo "OCGCORE_REV=$(git -C cpp/ygo rev-parse HEAD)" >> $GITHUB_ENV
          echo "LUA_REV=$(git -C cpp/lua rev-parse HEAD)" >> $GITHUB_ENV

      - name: Cache wasm build
        id: cache-wasm
        uses: actions/cache@v3
        with:
          path: lib
          key: ocgcore-build-${{ hashFiles('build.sh') }}-${{ hashFiles('cpp/wasm.cpp') }}-${{ env.OCGCORE_REV }}-${{ env.LUA_REV }}

      - name: Setup emsdk
        if: ${{ steps.cache-wasm.outputs.cache-hit != 'true' }}
        uses: mymindstorm/setup-emsdk@v11
        with:
          version: 3.1.45
          actions-cache-folder: "emsdk-cache"

      - name: Build wasm
        if: ${{ steps.cache-wasm.outputs.cache-hit != 'true' }}
        run: |
          chmod a+x ./build.sh
          ./build.sh

      - name: Build Library
        run: pnpm run build:lib

      - name: Build Types
        run: pnpm run build:types

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: |
            src
            lib
            dist
            package.json

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: "https://registry.npmjs.org"

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: package

      - name: Publish on npm
        id: publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
